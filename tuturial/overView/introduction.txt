there are two types of blockchain 
core:-
core developers are involved in what is calld corre developement, a cliche
right ?. In core developement, the developers writes the code for a blockchain client 
Low lvel Programing language are used in writting blockchain clients

2.DAPP:-
Blockchain app develpoment is what most blockchain developers do when they mentioned blockchain developemment we build apps on
 top of a blockchain client insted of creating a whole blockchain from scratch



*3:- Web development 
One mistake thet most newbibes make is to dive straight intoo smart contract without 
having a technical background in web  development. blockchain technologies are biilt on top of web development. 
and so before you need to understand the fundamental concepts of web developement.

in web developement we have two pars 
* Front End
* Back End


## Smart Contracts: In simpler terms,a smart contract is a program thet lives on top of the backgroundbloc
blockchain and consists a se tof rules agred upon by the involved parties .

. After execution, if these set of rules are met, the smart contract execcutes itself
to give an output. The program enables decentrilized autommation by facilation verifying 
and enforcing the condition of an underlying agriment the self-execution featur of 
smart contract is what makes it very important


### Solidity:
### hardhat
### ethers.js:- THe ethers.js library to be a complete and compact librsry for intrecting
with the ethereum Blockchain and its ecosystem. it was originsly designed for use withethers.js 
and has since expanded into aa more general- porpose library
. Keep your private keys in your client, safe and sound 
.import and export JSON wallets (GEtch, Parity and crowdsale)
.import and export Bip 39 mnemonic phrases 12 word backup phrase and HD Wallets (
    English, italiya, Japanese, Korean, Simplified Chinese, Traditional Chiniese; more)
.Meta classes create jawascript object  from any contract ABI , including Abiv2 and Human 
Readable ABI
.Connect to Ethereum nodes over JSOn RPC, INFUR, Etherescan, Cloudfare or MetaMask

.Tiny( ~88kb compressed; 284 kb uncompressed)
.execution documentation
.Fully tyoescriot ready with definition files and full TypeScript Source


